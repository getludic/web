from ludic.catalog.buttons import (
    Button,
    ButtonDanger,
    ButtonInfo,
    ButtonLink,
    ButtonPrimary,
    ButtonSecondary,
    ButtonSuccess,
    ButtonWarning,
)
from ludic.catalog.headers import H1, H2, H3, H4, Anchor
from ludic.catalog.layouts import Box, Cluster
from ludic.catalog.lists import Item, List
from ludic.catalog.messages import (
    Message,
    MessageDanger,
    MessageInfo,
    MessageSuccess,
    MessageWarning,
    Title,
)
from ludic.catalog.typography import Code, CodeBlock, Link, Paragraph
from ludic.web import LudicApp, Request

from web.pages import PageWithMenu

app = LudicApp()


@app.get("/catalog/")
def catalog(request: Request) -> PageWithMenu:
    return PageWithMenu(
        H1("Catalog"),
        Paragraph(
            f"The {Code("ludic.catalog")} module is meant as a collection of "
            "components that could be useful for building applications with the Ludic "
            "framework."
        ),
        List(
            Item("Any contributor is welcome to add new components or helpers."),
            Item("It also serves as a showcase of possible implementations."),
        ),
        request=request,
        active_item="catalog",
    )


@app.get("/typography/")
def typography(request: Request) -> PageWithMenu:
    return PageWithMenu(
        H1("Typography"),
        Paragraph(
            f"The module {Code("ludic.catalog.typography")} contains the following "
            "components:"
        ),
        H4("Link"),
        Paragraph(
            f"This text contains a {Link("link", to=str(request.url_for("catalog")))}.",
        ),
        CodeBlock(
            """
            from ludic.catalog.typography import Link

            Link("link", to="https://getludic.dev")  # appends target="_blank"
            Link("link", to="/")                    # does not append target="_blank"
            """,
            language="python",
        ),
        H4("Paragraph"),
        Paragraph("Here is some text wrapped in a paragraph."),
        CodeBlock(
            """
            from ludic.catalog.typography import Paragraph

            Paragraph("Here is some text wrapped in a paragraph.")
            """,
            language="python",
        ),
        H4("Code"),
        Paragraph(f"This text contains code: {Code("let mut x = 0;")}"),
        CodeBlock(
            """
            from ludic.catalog.typography import Code

            Code("let mut x = 0;")
            """,
            language="python",
        ),
        H4("Code Block"),
        Paragraph(
            "The following block contains a Rust code with syntax highlighting "
            "generated by Pygments:"
        ),
        CodeBlock(
            """
            fn main() {
                println!("Hello, world!");
            }
            """,
            language="rust",
        ),
        CodeBlock(
            """
            from ludic.catalog.typography import CodeBlock

            CodeBlock(
                \"\"\"
                fn main() {
                    println!("Hello, world!");
                }
                \"\"\",
                language="rust"
            )
            """,
            language="python",
        ),
        H2("Headers"),
        Paragraph(
            f"The module {Code("ludic.catalog.headers")} contains components "
            "rendering as HTML headers (h1-h4)."
        ),
        H1("H1"),
        H2("H2"),
        H3("H3"),
        H4("H4"),
        CodeBlock(
            """
            from ludic.catalog.headers import H1, H2, H3, H4

            H1("H1")
            H2("H2")
            H3("H3")
            H4("H4")
            """,
            language="python",
        ),
        Paragraph(
            f"The module also contains the {Code("Anchor")} component, which can be "
            "used to create an anchor link next to the header."
        ),
        H4("H4 With Anchor", anchor=Anchor("#", target="h4-with-anchor")),
        CodeBlock(
            """
            from ludic.catalog.headers import Anchor, H4

            H4("H4 With Anchor", anchor=Anchor("#", target="h4-with-anchor"))
            """,
            language="python",
        ),
        Paragraph(
            "It is possible to generate the anchor automatically using the "
            f"{Code("anchor=True")} attribute:"
        ),
        H3("H3 With Anchor", anchor=True),
        CodeBlock(
            """
            from ludic.catalog.headers import H3

            H3("H3 With Anchor", anchor=True)
            """,
            language="python",
        ),
        request=request,
        active_item="typography",
    )


@app.get("/buttons/")
def buttons(request: Request) -> PageWithMenu:
    return PageWithMenu(
        H1("Buttons"),
        Paragraph(
            f"The module {Code("ludic.catalog.buttons")} contains the following "
            "buttons (the name is the same):"
        ),
        Box(
            Cluster(
                Button("Button"),
                ButtonPrimary("ButtonPrimary"),
                ButtonSecondary("ButtonSecondary"),
                ButtonSuccess("ButtonSuccess"),
                ButtonInfo("ButtonInfo"),
                ButtonWarning("ButtonWarning"),
                ButtonDanger("ButtonDanger"),
                ButtonLink("ButtonLink"),
                classes=["centered"],
            ),
        ),
        CodeBlock(
            """
            from ludic.catalog.buttons import (
                Button, ButtonPrimary, ButtonSecondary, ButtonSuccess, ButtonInfo,
                ButtonWarning, ButtonDanger, ButtonLink
            )

            Button("Button")
            ButtonPrimary("ButtonPrimary")
            ButtonSecondary("ButtonSecondary")
            ButtonSuccess("ButtonSuccess")
            ButtonInfo("ButtonInfo")
            ButtonWarning("ButtonWarning")
            ButtonDanger("ButtonDanger")
            ButtonLink("ButtonLink")
            """,
            language="python",
        ),
        H2("Button Sizes"),
        Paragraph(
            "You can also change the size of the button appending the "
            f"{Code("small")} or {Code("large")} class:"
        ),
        Box(
            Cluster(
                ButtonPrimary("Small", classes=["small"]),
                ButtonPrimary("Normal"),
                ButtonPrimary("Large", classes=["large"]),
                classes=["centered"],
            )
        ),
        CodeBlock(
            """
            from ludic.catalog.buttons import ButtonPrimary

            ButtonPrimary("Small", classes=["small"])
            ButtonPrimary("Normal")
            ButtonPrimary("Large", classes=["large"])
            """,
            language="python",
        ),
        request=request,
        active_item="buttons",
    )


@app.get("/messages/")
def messages(request: Request) -> PageWithMenu:
    return PageWithMenu(
        H1("Messages"),
        Paragraph(
            f"The module {Code("ludic.catalog.messages")} contains the following "
            "components:"
        ),
        Message(
            Title("Message"),
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do "
            "eiusmod tempor incididunt ut labore et dolore magna aliqua. "
            "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi.",
        ),
        MessageSuccess(
            Title("MessageSuccess"),
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do "
            "eiusmod tempor incididunt ut labore et dolore magna aliqua. "
            "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi.",
        ),
        MessageInfo(
            Title("MessageInfo"),
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do "
            "eiusmod tempor incididunt ut labore et dolore magna aliqua. "
            "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi.",
        ),
        MessageWarning(
            Title("MessageWarning"),
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do "
            "eiusmod tempor incididunt ut labore et dolore magna aliqua. "
            "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi.",
        ),
        MessageDanger(
            Title("MessageDanger"),
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do "
            "eiusmod tempor incididunt ut labore et dolore magna aliqua. "
            "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi.",
        ),
        CodeBlock(
            """
            from ludic.catalog.messages import (
                Message, MessageSuccess, MessageInfo, MessageWarning, MessageDanger,
            )

            Message(Title("Message"), "...")
            MessageSuccess(Title("MessageSuccess"), "...")
            MessageInfo(Title("MessageInfo"), "...")
            MessageWarning(Title("MessageWarning"), "...")
            MessageDanger(Title("MessageDanger"), "...")
            """,
            language="python",
        ),
        Paragraph(
            f"Note that you don't need to specify the {Code("Title")} component. "
            "Here is how the message renders without the title:"
        ),
        Message(
            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do "
            "eiusmod tempor incididunt ut labore et dolore magna aliqua. "
        ),
        request=request,
        active_item="messages",
    )
